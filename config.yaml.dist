# This file contains the configuration for installing a single Kubernetes
# clusters using KubeOne. You can augment some options by providing
# Terraform output at runtime, like explained in the documentation.

name: my-demo-cluster

versions:
  kubernetes: '1.13.1'

network:
  # the subnet used for pods (flannel);
  # leave it empty for default: 10.244.0.0/16
  pod_subnet: ''

  # the subnet used for services;
  # leave it empty for default: 10.96.0.0/12
  service_subnet: ''

  # a nodePort range to reserve for services;
  # leave it empty for default: 30000-32767
  node_port_range: ''

provider:
  # Supported cloud provider names:
  # * aws
  # * digitalocean
  # * hetzner
  # * none
  # * openstack
  # * vshere
  name: ''
  
  # Set kubelet flag --cloud-provider=external, to be used with external
  # Cloud Controller Managers (CCM)
  external: false

  # path to file that will be uploaded and used as custom --cloud-config file
  cloud_config: ''

features:
  # enables PodSecurityPolicy admission plugin in API server, as well as creates
  # default `privileged` PodSecurityPolicy, plus RBAC rules to authorize
  # `kube-system` namespace pods to `use` it.
  enable_pod_security_policy: false

backup:
  # Ark supported provider, see https://heptio.github.io/ark/v0.10.0/support-matrix
  provider: '' # currently only aws is supported, empty provider disable ark backups
  # S3 Access Key used to access the backups bucket
  s3_access_key: 'env:BACKUP_AWS_ACCESS_KEY_ID'
  # S3 Secret Access Key used to access backups bucket
  s3_secret_access_key: 'env:BACKUP_AWS_SECRET_ACCESS_KEY'
  # Name of the to store backups in
  bucket_name: 'backup'
  # Additional backup options
  # https://heptio.github.io/ark/v0.10.0/api-types/backupstoragelocation.html
  # backup_storage_config:
  # Additional volume snapshot options
  # https://heptio.github.io/ark/v0.10.0/api-types/volumesnapshotlocation.html
  # volumes_snapshot_region:

# The list of nodes can be overwritten by providing Terraform output.
# You are strongly encouraged to provide an odd number of nodes and
# have at least three of them.
# Remember to only specify your *master* nodes.
# hosts:
# - public_address: '1.2.3.4'
#   private_address: '172.18.0.1'
#   ssh_port: 22 # can be left out if using the default (22)
#   ssh_username: ubuntu

#   # Uou usually want to configure either a private key OR an
#   # agent socket, but never both. The socket value can be
#   # prefixed with "env:" to refer to an environment variable.
#   ssh_private_key_file: '/home/me/.ssh/id_rsa'
#   ssh_agent_socket: 'env:SSH_AUTH_SOCK'

# The API server can also be overwritten by Terraform. Provide the
# external address of your load balancer or the public address of
# your first node.
# apiserver:
#   address: '1.2.3.4'

# If the cluster runs on bare metal or an unsupported cloud provider,
# you can disable the machine-controller deployment entirely. In this
# case, anything you configure in your "workers" sections is ignored.
#machine_controller:
#  deploy: false

# Proxy is used to configure HTTP_PROXY, HTTPS_PROXY and NO_PROXY
# for Docker daemon and kubelet, and to be used when provisioning cluster
# (e.g. for curl, apt-get..).
# proxy:
#  http_proxy: 'http://1.2.3.4'
#  https_proxy: 'https://1.2.3.4'
#  no_proxy: '1.2.3.4'

# KubeOne can automatically create MachineDeployments to create
# worker nodes in your cluster. Each element in this "workers"
# list is a single deployment and must have a unique name.
#workers:
#- name: fra1-a
#  replicas: 1
#  config:
#    labels:
#      mylabel: 'fra1-a'
#    # SSH keys can be inferred from Terraform if this list is empty
#    # and your tf output contains a "ssh_public_keys" field.
#    # sshPublicKeys:
#    # - 'ssh-rsa ......'
#    # cloudProviderSpec corresponds `provider.name` config
#    cloudProviderSpec:
#      ### the following params could be inferred by kubeone from terraform
#      ### output JSON:
#      # ami: 'ami-0332a5c40cf835528',
#      # availabilityZone: 'eu-central-1a',
#      # instanceProfile: 'mycool-profile',
#      # region: 'eu-central-1',
#      # securityGroupIDs: ['sg-01f34ffd8447e70c0']
#      # subnetId: 'subnet-2bff4f43',
#      # vpcId: 'vpc-819f62e9'
#      ### end of terraform inferred kubeone params
#      instanceType: 't2.medium'
#      diskSize: 50
#      diskType: 'gp2'
#    operatingSystem: 'ubuntu'
#    operatingSystemSpec:
#      distUpgradeOnBoot: true
#- name: fra1-b
#  replicas: 1
#  config:
#    labels:
#      mylabel: 'fra1-b'
#    cloudProviderSpec:
#      instanceType: 't2.medium'
#      diskSize: 50
#      diskType: 'gp2'
#    operatingSystem: 'ubuntu'
#    operatingSystemSpec:
#      distUpgradeOnBoot: true
#- name: fra1-c
#  replicas: 1
#  config:
#    labels:
#      mylabel: 'fra1-c'
#    cloudProviderSpec:
#      instanceType: 't2.medium'
#      diskSize: 50
#      diskType: 'gp2'
#    operatingSystem: 'ubuntu'
#    operatingSystemSpec:
#      distUpgradeOnBoot: true
