apiVersion: v1
kind: Namespace
metadata:
  name: vmware-system-csi
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: vsphere-csi-controller
  namespace: vmware-system-csi
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: vsphere-csi-node
  namespace: vmware-system-csi
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: vsphere-csi-node-role
  namespace: vmware-system-csi
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: vsphere-csi-controller-role
rules:
  - apiGroups:
      - ""
    resources:
      - nodes
      - pods
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch
      - create
  - apiGroups:
      - ""
    resources:
      - persistentvolumeclaims
    verbs:
      - get
      - list
      - watch
      - update
  - apiGroups:
      - ""
    resources:
      - persistentvolumeclaims/status
    verbs:
      - patch
  - apiGroups:
      - ""
    resources:
      - persistentvolumes
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - delete
      - patch
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - get
      - watch
      - list
      - delete
      - update
      - create
  - apiGroups:
      - storage.k8s.io
    resources:
      - storageclasses
      - csinodes
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - storage.k8s.io
    resources:
      - volumeattachments
    verbs:
      - get
      - list
      - watch
      - patch
  - apiGroups:
      - cns.vmware.com
    resources:
      - triggercsifullsyncs
    verbs:
      - create
      - get
      - update
      - watch
      - list
  - apiGroups:
      - cns.vmware.com
    resources:
      - cnsvspherevolumemigrations
    verbs:
      - create
      - get
      - list
      - watch
      - update
      - delete
  - apiGroups:
      - cns.vmware.com
    resources:
      - cnsvolumeinfoes
    verbs:
      - create
      - get
      - list
      - watch
      - delete
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - get
      - create
      - update
  - apiGroups:
      - storage.k8s.io
    resources:
      - volumeattachments/status
    verbs:
      - patch
  - apiGroups:
      - cns.vmware.com
    resources:
      - cnsvolumeoperationrequests
    verbs:
      - create
      - get
      - list
      - update
      - delete
  - apiGroups:
      - snapshot.storage.k8s.io
    resources:
      - volumesnapshots
    verbs:
      - get
      - list
  - apiGroups:
      - snapshot.storage.k8s.io
    resources:
      - volumesnapshotclasses
    verbs:
      - watch
      - get
      - list
  - apiGroups:
      - snapshot.storage.k8s.io
    resources:
      - volumesnapshotcontents
    verbs:
      - create
      - get
      - list
      - watch
      - update
      - delete
      - patch
  - apiGroups:
      - snapshot.storage.k8s.io
    resources:
      - volumesnapshotcontents/status
    verbs:
      - update
      - patch
  - apiGroups:
      - cns.vmware.com
    resources:
      - csinodetopologies
    verbs:
      - get
      - update
      - watch
      - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: vsphere-csi-node-cluster-role
rules:
  - apiGroups:
      - cns.vmware.com
    resources:
      - csinodetopologies
    verbs:
      - create
      - watch
      - get
      - patch
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: vsphere-csi-node-binding
  namespace: vmware-system-csi
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: vsphere-csi-node-role
subjects:
  - kind: ServiceAccount
    name: vsphere-csi-node
    namespace: vmware-system-csi
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: vsphere-csi-controller-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: vsphere-csi-controller-role
subjects:
  - kind: ServiceAccount
    name: vsphere-csi-controller
    namespace: vmware-system-csi
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: vsphere-csi-node-cluster-role-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: vsphere-csi-node-cluster-role
subjects:
  - kind: ServiceAccount
    name: vsphere-csi-node
    namespace: vmware-system-csi
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: vsphere-csi-controller
  name: vsphere-csi-controller
  namespace: vmware-system-csi
spec:
  ports:
    - name: ctlr
      port: 2112
      protocol: TCP
      targetPort: 2112
    - name: syncer
      port: 2113
      protocol: TCP
      targetPort: 2113
  selector:
    app: vsphere-csi-controller
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: vsphere-csi-controller
  name: vsphere-csi-controller
  namespace: vmware-system-csi
spec:
  replicas: 3
  selector:
    matchLabels:
      app: vsphere-csi-controller
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        csiConfig-hash: '{{ .Config.CloudProvider.CSIConfig | sha256sum }}'
        kubeone.k8c.io/cabundle-hash: '{{ CABundle | sha256sum }}'
      labels:
        app: vsphere-csi-controller
        role: vsphere-csi
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: node-role.kubernetes.io/control-plane
                    operator: Exists
              - matchExpressions:
                  - key: node-role.kubernetes.io/controlplane
                    operator: Exists
              - matchExpressions:
                  - key: node-role.kubernetes.io/master
                    operator: Exists
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - vsphere-csi-controller
              topologyKey: kubernetes.io/hostname
      containers:
        - args:
            - --v=4
            - --timeout=300s
            - --csi-address=$(ADDRESS)
            - --leader-election
            - --leader-election-lease-duration=120s
            - --leader-election-renew-deadline=60s
            - --leader-election-retry-period=30s
            - --kube-api-qps=100
            - --kube-api-burst=100
            - --worker-threads=100
          env:
            - name: ADDRESS
              value: /csi/csi.sock
          image: '{{ .InternalImages.Get "VsphereCSIAttacher" }}'
          name: csi-attacher
          volumeMounts:
            - mountPath: /csi
              name: socket-dir
        - args:
            - --v=4
            - --timeout=300s
            - --handle-volume-inuse-error=false
            - --csi-address=$(ADDRESS)
            - --kube-api-qps=100
            - --kube-api-burst=100
            - --leader-election
            - --leader-election-lease-duration=120s
            - --leader-election-renew-deadline=60s
            - --leader-election-retry-period=30s
          env:
            - name: ADDRESS
              value: /csi/csi.sock
          image: '{{ .InternalImages.Get "VsphereCSIResizer" }}'
          name: csi-resizer
          volumeMounts:
            - mountPath: /csi
              name: socket-dir
        - args:
            - --fss-name=internal-feature-states.csi.vsphere.vmware.com
            - --fss-namespace=$(CSI_NAMESPACE)
          env:
            - name: CSI_ENDPOINT
              value: unix:///csi/csi.sock
            - name: X_CSI_MODE
              value: controller
            - name: X_CSI_SPEC_DISABLE_LEN_CHECK
              value: "true"
            - name: X_CSI_SERIAL_VOL_ACCESS_TIMEOUT
              value: 3m
            - name: VSPHERE_CSI_CONFIG
              value: /etc/cloud/csi-vsphere.conf
            - name: LOGGER_LEVEL
              value: PRODUCTION
            - name: INCLUSTER_CLIENT_QPS
              value: "100"
            - name: INCLUSTER_CLIENT_BURST
              value: "100"
            - name: CSI_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          image: '{{ .InternalImages.Get "VsphereCSIDriver" }}'
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: healthz
            initialDelaySeconds: 30
            periodSeconds: 180
            timeoutSeconds: 10
          name: vsphere-csi-controller
          ports:
            - containerPort: 9808
              name: healthz
              protocol: TCP
            - containerPort: 2112
              name: prometheus
              protocol: TCP
          securityContext:
            runAsGroup: 65532
            runAsNonRoot: true
            runAsUser: 65532
          volumeMounts:
            - mountPath: /etc/cloud
              name: vsphere-config-volume
              readOnly: true
            - mountPath: /csi
              name: socket-dir
        - args:
            - --v=4
            - --csi-address=/csi/csi.sock
          image: '{{ .InternalImages.Get "VsphereCSILivenessProbe" }}'
          name: liveness-probe
          volumeMounts:
            - mountPath: /csi
              name: socket-dir
        - args:
            - --leader-election
            - --leader-election-lease-duration=30s
            - --leader-election-renew-deadline=20s
            - --leader-election-retry-period=10s
            - --fss-name=internal-feature-states.csi.vsphere.vmware.com
            - --fss-namespace=$(CSI_NAMESPACE)
          env:
            - name: FULL_SYNC_INTERVAL_MINUTES
              value: "30"
            - name: VSPHERE_CSI_CONFIG
              value: /etc/cloud/csi-vsphere.conf
            - name: LOGGER_LEVEL
              value: PRODUCTION
            - name: INCLUSTER_CLIENT_QPS
              value: "100"
            - name: INCLUSTER_CLIENT_BURST
              value: "100"
            - name: CSI_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          image: '{{ .InternalImages.Get "VsphereCSISyncer" }}'
          imagePullPolicy: Always
          name: vsphere-syncer
          ports:
            - containerPort: 2113
              name: prometheus
              protocol: TCP
          securityContext:
            runAsGroup: 65532
            runAsNonRoot: true
            runAsUser: 65532
          volumeMounts:
            - mountPath: /etc/cloud
              name: vsphere-config-volume
              readOnly: true
        - args:
            - --v=4
            - --timeout=300s
            - --csi-address=$(ADDRESS)
            - --kube-api-qps=100
            - --kube-api-burst=100
            - --leader-election
            - --leader-election-lease-duration=120s
            - --leader-election-renew-deadline=60s
            - --leader-election-retry-period=30s
            - --default-fstype=ext4
          env:
            - name: ADDRESS
              value: /csi/csi.sock
          image: '{{ .InternalImages.Get "VsphereCSIProvisioner" }}'
          name: csi-provisioner
          volumeMounts:
            - mountPath: /csi
              name: socket-dir
        - args:
            - --v=4
            - --kube-api-qps=100
            - --kube-api-burst=100
            - --timeout=300s
            - --csi-address=$(ADDRESS)
            - --leader-election
            - --leader-election-lease-duration=120s
            - --leader-election-renew-deadline=60s
            - --leader-election-retry-period=30s
          env:
            - name: ADDRESS
              value: /csi/csi.sock
          image: '{{ .InternalImages.Get "VsphereCSISnapshotter" }}'
          name: csi-snapshotter
          volumeMounts:
            - mountPath: /csi
              name: socket-dir
      dnsPolicy: Default
      priorityClassName: system-cluster-critical
      serviceAccountName: vsphere-csi-controller
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
      volumes:
        - name: vsphere-config-volume
          secret:
            secretName: vsphere-config-secret
        - emptyDir: {}
          name: socket-dir
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: vsphere-csi-node
  namespace: vmware-system-csi
spec:
  selector:
    matchLabels:
      app: vsphere-csi-node
  template:
    metadata:
      annotations:
        csiConfig-hash: '{{ .Config.CloudProvider.CSIConfig | sha256sum }}'
        kubeone.k8c.io/cabundle-hash: '{{ CABundle | sha256sum }}'
      labels:
        app: vsphere-csi-node
        role: vsphere-csi
    spec:
      containers:
        - args:
            - --v=5
            - --csi-address=$(ADDRESS)
            - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
          env:
            - name: ADDRESS
              value: /csi/csi.sock
            - name: DRIVER_REG_SOCK_PATH
              value: /var/lib/kubelet/plugins/csi.vsphere.vmware.com/csi.sock
          image: '{{ .InternalImages.Get "VsphereCSINodeDriverRegistar" }}'
          livenessProbe:
            exec:
              command:
                - /csi-node-driver-registrar
                - --kubelet-registration-path=/var/lib/kubelet/plugins/csi.vsphere.vmware.com/csi.sock
                - --mode=kubelet-registration-probe
            initialDelaySeconds: 3
          name: node-driver-registrar
          volumeMounts:
            - mountPath: /csi
              name: plugin-dir
            - mountPath: /registration
              name: registration-dir
        - args:
            - --fss-name=internal-feature-states.csi.vsphere.vmware.com
            - --fss-namespace=$(CSI_NAMESPACE)
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: CSI_ENDPOINT
              value: unix:///csi/csi.sock
            - name: MAX_VOLUMES_PER_NODE
              value: "59"
            - name: X_CSI_MODE
              value: node
            - name: X_CSI_SPEC_REQ_VALIDATION
              value: "false"
            - name: X_CSI_SPEC_DISABLE_LEN_CHECK
              value: "true"
            - name: LOGGER_LEVEL
              value: PRODUCTION
            - name: CSI_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: NODEGETINFO_WATCH_TIMEOUT_MINUTES
              value: "1"
          image: '{{ .InternalImages.Get "VsphereCSIDriver" }}'
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: healthz
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 5
          name: vsphere-csi-node
          ports:
            - containerPort: 9808
              name: healthz
              protocol: TCP
          securityContext:
            allowPrivilegeEscalation: true
            capabilities:
              add:
                - SYS_ADMIN
            privileged: true
          volumeMounts:
            - mountPath: /csi
              name: plugin-dir
            - mountPath: /var/lib/kubelet
              mountPropagation: Bidirectional
              name: pods-mount-dir
            - mountPath: /dev
              name: device-dir
            - mountPath: /sys/block
              name: blocks-dir
            - mountPath: /sys/devices
              name: sys-devices-dir
        - args:
            - --v=4
            - --csi-address=/csi/csi.sock
          image: '{{ .InternalImages.Get "VsphereCSILivenessProbe" }}'
          name: liveness-probe
          volumeMounts:
            - mountPath: /csi
              name: plugin-dir
      dnsPolicy: ClusterFirstWithHostNet
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      serviceAccountName: vsphere-csi-node
      tolerations:
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
      volumes:
        - hostPath:
            path: /var/lib/kubelet/plugins_registry
            type: Directory
          name: registration-dir
        - hostPath:
            path: /var/lib/kubelet/plugins/csi.vsphere.vmware.com
            type: DirectoryOrCreate
          name: plugin-dir
        - hostPath:
            path: /var/lib/kubelet
            type: Directory
          name: pods-mount-dir
        - hostPath:
            path: /dev
          name: device-dir
        - hostPath:
            path: /sys/block
            type: Directory
          name: blocks-dir
        - hostPath:
            path: /sys/devices
            type: Directory
          name: sys-devices-dir
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
---
apiVersion: storage.k8s.io/v1
kind: CSIDriver
metadata:
  name: csi.vsphere.vmware.com
spec:
  attachRequired: true
  podInfoOnMount: false
