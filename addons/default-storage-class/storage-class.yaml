{{ if eq .Config.CloudProvider.CloudProviderName "azure" }}
{{ if .DeployCSIAddon }}
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  annotations:
    storageclass.beta.kubernetes.io/is-default-class: "true"
  labels:
    kubernetes.io/cluster-service: "true"
  name: azuredisk-csi
provisioner: disk.csi.azure.com
parameters:
  skuName: Standard_LRS
reclaimPolicy: Delete
volumeBindingMode: Immediate
allowVolumeExpansion: true
---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  labels:
    kubernetes.io/cluster-service: "true"
  name: azurefile-csi
provisioner: file.csi.azure.com
parameters:
  skuName: Standard_LRS
reclaimPolicy: Delete
volumeBindingMode: Immediate
---
{{ end }}
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
{{ if not .DeployCSIAddon }}
  annotations:
    storageclass.beta.kubernetes.io/is-default-class: "true"
{{ end }}
  labels:
    kubernetes.io/cluster-service: "true"
  name: standard
provisioner: kubernetes.io/azure-disk
parameters:
  kind: Managed
  storageaccounttype: Standard_LRS
{{ end }}

{{ if eq .Config.CloudProvider.CloudProviderName "aws" }}
{{ if .DeployCSIAddon }}
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: ebs-csi
  annotations:
    storageclass.beta.kubernetes.io/is-default-class: "true"
  labels:
    kubernetes.io/cluster-service: "true"
provisioner: ebs.csi.aws.com
parameters:
  type: gp2
volumeBindingMode: WaitForFirstConsumer
---
{{ end }}
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
{{ if not .DeployCSIAddon }}
  annotations:
    storageclass.beta.kubernetes.io/is-default-class: "true"
{{ end }}
  labels:
    kubernetes.io/cluster-service: "true"
  name: standard-v2
provisioner: kubernetes.io/aws-ebs
parameters:
  type: gp2
volumeBindingMode: WaitForFirstConsumer
{{ end }}

{{ if eq .Config.CloudProvider.CloudProviderName "vsphere" }}
{{ if .DeployCSIAddon }}
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  annotations:
    storageclass.beta.kubernetes.io/is-default-class: "true"
  labels:
    kubernetes.io/cluster-service: "true"
  name: vsphere-csi
provisioner: csi.vsphere.vmware.com
---
apiVersion: snapshot.storage.k8s.io/v1
kind: VolumeSnapshotClass
metadata:
  name: vsphere-csi
  annotations:
    snapshot.storage.kubernetes.io/is-default-class: "true"
driver: csi.vsphere.vmware.com
deletionPolicy: Delete
---
{{ end }}
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
{{ if not .DeployCSIAddon }}
  annotations:
    storageclass.beta.kubernetes.io/is-default-class: "true"
{{ end }}
  labels:
    kubernetes.io/cluster-service: "true"
  name: standard
provisioner: kubernetes.io/vsphere-volume
parameters:
  diskformat: thin
{{ end }}

{{ if eq .Config.CloudProvider.CloudProviderName "openstack" }}
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  annotations:
    storageclass.beta.kubernetes.io/is-default-class: "true"
  labels:
    kubernetes.io/cluster-service: "true"
  name: cinder-csi
provisioner: cinder.csi.openstack.org
volumeBindingMode: WaitForFirstConsumer
---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  labels:
    kubernetes.io/cluster-service: "true"
  name: standard
provisioner: kubernetes.io/cinder
---
apiVersion: snapshot.storage.k8s.io/v1
kind: VolumeSnapshotClass
metadata:
  name: cinder-csi
  annotations:
    snapshot.storage.kubernetes.io/is-default-class: "true"
driver: cinder.csi.openstack.org
parameters:
  force-create: "true" # required by external-snapshotter, otherwise it errors with "volume in-use"
deletionPolicy: Delete
{{ end }}

{{ if eq .Config.CloudProvider.CloudProviderName "gce" }}
{{ if .DeployCSIAddon }}
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  annotations:
    storageclass.beta.kubernetes.io/is-default-class: "true"
  name: csi-gce
provisioner: pd.csi.storage.gke.io
volumeBindingMode: WaitForFirstConsumer
allowVolumeExpansion: true
parameters:
  type: pd-ssd
---
kind: VolumeSnapshotClass
apiVersion: snapshot.storage.k8s.io/v1
metadata:
  name: csi-gce
  annotations:
    snapshot.storage.kubernetes.io/is-default-class: "true"
driver: pd.csi.storage.gke.io
deletionPolicy: Delete
---
{{ end }}
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
{{ if not .DeployCSIAddon }}
  annotations:
    storageclass.beta.kubernetes.io/is-default-class: "true"
{{ end }}
  labels:
    kubernetes.io/cluster-service: "true"
  name: standard
provisioner: kubernetes.io/gce-pd
volumeBindingMode: WaitForFirstConsumer
parameters:
  type: pd-ssd
{{ end }}

{{ if eq .Config.CloudProvider.CloudProviderName "nutanix" }}
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: ntnx-csi
  annotations:
    storageclass.kubernetes.io/is-default-class: "true"
provisioner: csi.nutanix.com
parameters:
  storageType: NutanixVolumes
  csi.storage.k8s.io/provisioner-secret-name: ntnx-secret
  csi.storage.k8s.io/provisioner-secret-namespace: kube-system
  csi.storage.k8s.io/node-publish-secret-name: ntnx-secret
  csi.storage.k8s.io/node-publish-secret-namespace: kube-system
  csi.storage.k8s.io/controller-expand-secret-name: ntnx-secret
  csi.storage.k8s.io/controller-expand-secret-namespace: kube-system
  storageContainer: {{ default "Default" .Params.storageContainer | quote }}
  csi.storage.k8s.io/fstype: {{ default "xfs" .Params.fsType | quote }}
  isSegmentedIscsiNetwork: {{ default "false" .Params.isSegmentedIscsiNetwork | quote }}
allowVolumeExpansion: true
reclaimPolicy: Delete
{{ end }}

{{ if eq .Config.CloudProvider.CloudProviderName "hetzner" }}
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  namespace: kube-system
  name: hcloud-volumes
  annotations:
    storageclass.kubernetes.io/is-default-class: "true"
provisioner: csi.hetzner.cloud
volumeBindingMode: WaitForFirstConsumer
allowVolumeExpansion: true
{{ end }}

{{ if eq .Config.CloudProvider.CloudProviderName "digitalocean" }}
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: do-block-storage
  annotations:
    storageclass.kubernetes.io/is-default-class: "true"
provisioner: dobs.csi.digitalocean.com
allowVolumeExpansion: true
---
kind: VolumeSnapshotClass
apiVersion: snapshot.storage.k8s.io/v1
metadata:
  name: do-block-storage
  annotations:
    snapshot.storage.kubernetes.io/is-default-class: "true"
driver: dobs.csi.digitalocean.com
deletionPolicy: Delete
{{ end }}

{{ if eq .Config.CloudProvider.CloudProviderName "vmwareCloudDirector" }}
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  annotations:
    storageclass.kubernetes.io/is-default-class: "true"
  name: vcd-disk-dev
provisioner: named-disk.csi.cloud-director.vmware.com
reclaimPolicy: Delete
parameters:
  storageProfile: {{ default .Config.CloudProvider.VMwareCloudDirector.StorageProfile .Params.storageProfile | quote }}
  filesystem: {{ default "ext4" .Params.filesystem | quote }}
{{ end }}
