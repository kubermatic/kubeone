---
apiVersion: v1
kind: Secret
metadata:
  name: csi-snapshotter-webhook-certs
  namespace: kube-system
data:
  "cert.pem": |
{{ .Certificates.CSIWebhookCert | b64enc | indent 4 }}
  "key.pem": |
{{ .Certificates.CSIWebhookKey | b64enc | indent 4 }}
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: "validation-webhook.snapshot.storage.k8s.io"
webhooks:
  - name: "validation-webhook.snapshot.storage.k8s.io"
    rules:
      - apiGroups:   ["snapshot.storage.k8s.io"]
        apiVersions: ["v1", "v1beta1"]
        operations:  ["CREATE", "UPDATE"]
        resources:   ["volumesnapshots", "volumesnapshotcontents"]
        scope:       "*"
    clientConfig:
      service:
        namespace: "kube-system"
        name: "snapshot-validation-service"
        path: "/volumesnapshot"
      caBundle: |
{{ .Certificates.KubernetesCA | b64enc | indent 8 }}
    admissionReviewVersions: ["v1", "v1beta1"]
    sideEffects: None
    failurePolicy: Fail
    timeoutSeconds: 5
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: snapshot-validation-deployment
  namespace: kube-system
  labels:
    app: snapshot-validation
spec:
  replicas: 3
  selector:
    matchLabels:
      app: snapshot-validation
  template:
    metadata:
      labels:
        app: snapshot-validation
    spec:
      nodeSelector:
        kubernetes.io/os: linux
        node-role.kubernetes.io/control-plane: ""
      tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - key: "node-role.kubernetes.io/master"
          operator: "Exists"
          effect: "NoSchedule"
        - key: "node-role.kubernetes.io/control-plane"
          operator: "Exists"
          effect: "NoSchedule"
        - operator: Exists
          effect: NoExecute
          tolerationSeconds: 300
      containers:
      - name: snapshot-validation
        image: {{ .InternalImages.Get "GCPComputeCSISnapshotValidationWebhook" }}
        imagePullPolicy: IfNotPresent
        args: ['--tls-cert-file=/etc/snapshot-validation-webhook/certs/cert.pem', '--tls-private-key-file=/etc/snapshot-validation-webhook/certs/key.pem']
        ports:
        - containerPort: 443 # change the port as needed
        volumeMounts:
          - name: snapshot-validation-webhook-certs
            mountPath: /etc/snapshot-validation-webhook/certs
            readOnly: true
      volumes:
        - name: snapshot-validation-webhook-certs
          secret:
            secretName: csi-snapshotter-webhook-certs
---
apiVersion: v1
kind: Service
metadata:
  name: snapshot-validation-service
  namespace: kube-system
spec:
  selector:
    app: snapshot-validation
  ports:
    - protocol: TCP
      port: 443
      targetPort: 443
