apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    addon.kops.k8s.io/name: gcp-cloud-controller.addons.k8s.io
  name: cloud-controller-manager
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    addon.kops.k8s.io/name: gcp-cloud-controller.addons.k8s.io
    addonmanager.kubernetes.io/mode: Reconcile
  name: system::leader-locking-cloud-controller-manager
  namespace: kube-system
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - watch
  - apiGroups:
      - ""
    resourceNames:
      - cloud-controller-manager
    resources:
      - configmaps
    verbs:
      - get
      - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    addon.kops.k8s.io/name: gcp-cloud-controller.addons.k8s.io
    addonmanager.kubernetes.io/mode: Reconcile
  name: system:cloud-controller-manager
rules:
  - apiGroups:
      - ""
      - events.k8s.io
    resources:
      - events
    verbs:
      - create
      - patch
      - update
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - create
      - get
      - list
      - watch
      - update
  - apiGroups:
      - coordination.k8s.io
    resourceNames:
      - cloud-controller-manager
    resources:
      - leases
    verbs:
      - get
      - update
  - apiGroups:
      - ""
    resources:
      - endpoints
      - serviceaccounts
    verbs:
      - create
      - get
      - update
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - get
      - update
      - patch
  - apiGroups:
      - ""
    resources:
      - namespaces
    verbs:
      - get
  - apiGroups:
      - ""
    resources:
      - nodes/status
    verbs:
      - patch
      - update
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - create
      - delete
      - get
      - update
  - apiGroups:
      - authentication.k8s.io
    resources:
      - tokenreviews
    verbs:
      - create
  - apiGroups:
      - '*'
    resources:
      - '*'
    verbs:
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - serviceaccounts/token
    verbs:
      - create
  - apiGroups:
      - ""
    resources:
      - services/status
    verbs:
      - patch
      - update
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - create
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    addon.kops.k8s.io/name: gcp-cloud-controller.addons.k8s.io
    addonmanager.kubernetes.io/mode: Reconcile
  name: system:controller:cloud-node-controller
rules:
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
      - update
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - get
      - list
      - update
      - delete
      - patch
  - apiGroups:
      - ""
    resources:
      - nodes/status
    verbs:
      - get
      - list
      - update
      - delete
      - patch
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - list
      - delete
  - apiGroups:
      - ""
    resources:
      - pods/status
    verbs:
      - list
      - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    addon.kops.k8s.io/name: gcp-cloud-controller.addons.k8s.io
    addonmanager.kubernetes.io/mode: Reconcile
  name: system:controller:pvl-controller
rules:
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
      - update
  - apiGroups:
      - ""
    resources:
      - persistentvolumeclaims
      - persistentvolumes
    verbs:
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    addon.kops.k8s.io/name: gcp-cloud-controller.addons.k8s.io
  name: cloud-controller-manager:apiserver-authentication-reader
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: extension-apiserver-authentication-reader
subjects:
  - apiGroup: ""
    kind: ServiceAccount
    name: cloud-controller-manager
    namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    addon.kops.k8s.io/name: gcp-cloud-controller.addons.k8s.io
    addonmanager.kubernetes.io/mode: Reconcile
  name: system::leader-locking-cloud-controller-manager
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: system::leader-locking-cloud-controller-manager
subjects:
  - kind: ServiceAccount
    name: cloud-controller-manager
    namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    addon.kops.k8s.io/name: gcp-cloud-controller.addons.k8s.io
    addonmanager.kubernetes.io/mode: Reconcile
  name: system:cloud-controller-manager
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:cloud-controller-manager
subjects:
  - apiGroup: ""
    kind: ServiceAccount
    name: cloud-controller-manager
    namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    addon.kops.k8s.io/name: gcp-cloud-controller.addons.k8s.io
    addonmanager.kubernetes.io/mode: Reconcile
  name: system:controller:cloud-node-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:controller:cloud-node-controller
subjects:
  - kind: ServiceAccount
    name: cloud-node-controller
    namespace: kube-system
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    addon.kops.k8s.io/name: gcp-cloud-controller.addons.k8s.io
    component: cloud-controller-manager
  name: cloud-controller-manager
  namespace: kube-system
spec:
  selector:
    matchLabels:
      component: cloud-controller-manager
  template:
    metadata:
      annotations:
        kubeone.k8c.io/credentials-hash: '{{ .CredentialsCCMHash }}'
      labels:
        component: cloud-controller-manager
        k8s-app: gce-cloud-controller-manager
        tier: control-plane
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: node-role.kubernetes.io/control-plane
                    operator: Exists
              - matchExpressions:
                  - key: node-role.kubernetes.io/master
                    operator: Exists
      containers:
        - args:
            - /go-runner
            - --redirect-stderr=true
            - /cloud-controller-manager
            - --allocate-node-cidrs=false
            - --cloud-config=/etc/kubernetes/cloud/config
            - --cloud-provider=gce
            - --cluster-name={{ .Config.Name }}
            - --configure-cloud-routes=false
            - --controllers=*,-node-ipam-controller,-node-route-controller
            - --v=2
          env:
            - name: GOOGLE_APPLICATION_CREDENTIALS
              value: /etc/cloud-sa/cloud-sa.json
          image: '{{ .InternalImages.Get "GCPCCM" }}'
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              host: 127.0.0.1
              path: /healthz
              port: 10258
              scheme: HTTPS
            initialDelaySeconds: 15
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 15
          name: cloud-controller-manager
          resources:
            requests:
              cpu: 200m
          volumeMounts:
            - mountPath: /etc/cloud-sa
              name: cloud-sa
              readOnly: true
            - mountPath: /etc/kubernetes/cloud
              name: cloudconfig
              readOnly: true
      hostNetwork: true
      nodeSelector: null
      priorityClassName: system-cluster-critical
      serviceAccountName: cloud-controller-manager
      tolerations:
        - effect: NoSchedule
          key: node.cloudprovider.kubernetes.io/uninitialized
          value: "true"
        - effect: NoSchedule
          key: node.kubernetes.io/not-ready
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
      volumes:
        - name: cloudconfig
          secret:
            items:
              - key: cloud-config
                path: config
            secretName: cloud-config
        - name: cloud-sa
          secret:
            items:
              - key: GOOGLE_SERVICE_ACCOUNT
                path: cloud-sa.json
            secretName: kubeone-ccm-credentials
  updateStrategy:
    type: RollingUpdate
