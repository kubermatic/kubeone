apiVersion: v1
kind: Secret
metadata:
  name: machinecontroller-webhook-serving-cert
  namespace: kube-system
data:
  "cert.pem": |
{{ .Certificates.MachineControllerWebhookCert | b64enc | indent 4 }}
  "key.pem": |
{{ .Certificates.MachineControllerWebhookKey | b64enc | indent 4 }}
  "ca.crt": |
{{ .Certificates.KubernetesCA | b64enc | indent 4 }}

{{ if .RegistryCredentials }}
---
apiVersion: v1
kind: Secret
metadata:
  name: kubeone-registry-credentials
  namespace: kube-system
data:
{{ range .RegistryCredentials }}
  {{ .RegistryName }}: |
{{ mustToRawJson .Auth | b64enc | indent 4 }}
{{ end }}
{{ end }}

---
apiVersion: v1
kind: Service
metadata:
  name: machine-controller-webhook
  namespace: kube-system
spec:
  ports:
    - port: 443
      protocol: TCP
      targetPort: 9876
  selector:
    app: machine-controller-webhook
  type: ClusterIP

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: machine-controller-webhook
  namespace: kube-system
  labels:
    app: machine-controller-webhook
spec:
  replicas: 1
  selector:
    matchLabels:
      app: machine-controller-webhook
  template:
    metadata:
      labels:
        app: machine-controller-webhook
      annotations:
        "kubeone.k8c.io/credentials-hash": "{{ .MachineControllerCredentialsHash }}"
        "kubeone.k8c.io/cabundle-hash": "{{ .Config.CABundle | sha256sum }}"
    spec:
      nodeSelector:
        node-role.kubernetes.io/control-plane: ""
      tolerations:
        - key: "node-role.kubernetes.io/control-plane"
          operator: Exists
          effect: NoSchedule
        - key: "node-role.kubernetes.io/master"
          operator: Exists
          effect: NoSchedule
        - key: "node.cloudprovider.kubernetes.io/uninitialized"
          value: "true"
          effect: NoSchedule
        - key: "CriticalAddonsOnly"
          operator: Exists
      serviceAccountName: machine-controller-webhook
      containers:
        - image: "{{ .InternalImages.Get "MachineController" }}"
          imagePullPolicy: IfNotPresent
          name: machine-controller-webhook
          command:
            - /usr/local/bin/webhook
          args:
            - -logtostderr
            - -v=4
            - -listen-address=0.0.0.0:9876
            - -namespace=kube-system
            {{ if .Config.CloudProvider.External }}
            - -node-external-cloud-provider
            {{ end }}
            {{ if .CSIMigrationFeatureGates }}
            - -node-kubelet-feature-gates={{ .CSIMigrationFeatureGates }}
            {{ end }}
            {{ if .Config.CABundle -}}
            - -ca-bundle={{ .Resources.CABundleSSLCertFilePath }}
            {{ end -}}
            {{ if .OperatingSystemManagerEnabled }}
            - -use-osm
            {{ end }}
          env:
            - name: HTTPS_PROXY
              value: "{{ .Config.Proxy.HTTPS }}"
            - name: NO_PROXY
              value: "{{ .Config.Proxy.NoProxy }}"
{{ .MachineControllerCredentialsEnvVars | indent 12 }}
{{ if .Config.CABundle }}
{{ caBundleEnvVar | indent 12 }}
{{ end }}
          volumeMounts:
            - name: machinecontroller-webhook-serving-cert
              mountPath: /tmp/cert
              readOnly: true
{{ if .Config.CABundle }}
{{ caBundleVolumeMount | indent 12 }}
{{ end }}
          livenessProbe:
            httpGet:
              path: /healthz
              port: 9876
              scheme: HTTPS
            initialDelaySeconds: 5
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /healthz
              port: 9876
              scheme: HTTPS
            periodSeconds: 5
      volumes:
        - name: machinecontroller-webhook-serving-cert
          secret:
            secretName: machinecontroller-webhook-serving-cert
            defaultMode: 0444
{{ if .Config.CABundle }}
{{ caBundleVolume | indent 8 }}
{{ end }}
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: machinedeployments.machine-controller.kubermatic.io
webhooks:
  - name: machinedeployments.machine-controller.kubermatic.io
    failurePolicy: Fail
    sideEffects: None
    admissionReviewVersions: ["v1"]
    rules:
      - apiGroups:
          - "cluster.k8s.io"
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - machinedeployments
    clientConfig:
      service:
        namespace: kube-system
        name: machine-controller-webhook
        path: /machinedeployments
      caBundle: |
{{ .Certificates.KubernetesCA | b64enc | indent 8 }}
  - name: machines.machine-controller.kubermatic.io
    failurePolicy: Fail
    sideEffects: None
    admissionReviewVersions: ["v1"]
    rules:
      - apiGroups:
          - "cluster.k8s.io"
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - machines
    clientConfig:
      service:
        namespace: kube-system
        name: machine-controller-webhook
        path: /machines
      caBundle: |
{{ .Certificates.KubernetesCA | b64enc | indent 8 }}
