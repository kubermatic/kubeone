apiVersion: v1
kind: ServiceAccount
metadata:
  name: machine-controller
  namespace: kube-system

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: machine-controller
  namespace: kube-system
rules:
  - apiGroups:
      - ""
    resources:
      - secrets
      - configmaps
    verbs:
      - create
      - list
      - update
      - watch
  - apiGroups:
      - ""
    resources:
      - endpoints
    resourceNames:
      - machine-controller
    verbs:
      - "*"
  - apiGroups:
      - ""
    resources:
      - endpoints
    verbs:
      - create
  - apiGroups:
      - "coordination.k8s.io"
    resources:
      - leases
    verbs:
      - "*"

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: machine-controller
  namespace: kube-public
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: machine-controller
  namespace: default
rules:
  - apiGroups:
      - ""
    resources:
      - endpoints
    verbs:
      - get
      - list
      - watch

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: machine-controller
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: machine-controller
subjects:
  - kind: ServiceAccount
    name: machine-controller
    namespace: kube-system

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: machine-controller
  namespace: kube-public
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: machine-controller
subjects:
  - kind: ServiceAccount
    name: machine-controller
    namespace: kube-system

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: machine-controller
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: machine-controller
subjects:
  - kind: ServiceAccount
    name: machine-controller
    namespace: kube-system

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: machine-controller
rules:
  - apiGroups:
      - ""
    resources:
      - "events"
    verbs:
      - "create"
      - "patch"
  - apiGroups:
      - "apiextensions.k8s.io"
    resources:
      - "customresourcedefinitions"
    verbs:
      - "create"
      - "get"
      - "list"
      - "watch"
  - apiGroups:
      - "apiextensions.k8s.io"
    resources:
      - "customresourcedefinitions"
    resourceNames:
      - "machines.machine.k8s.io"
    verbs:
      - "*"
  - apiGroups:
      - "machine.k8s.io"
    resources:
      - "machines"
    verbs:
      - "*"
  - apiGroups:
      - "cluster.k8s.io"
    resources:
      - "machinedeployments"
      - "machinedeployments/status"
      - "machines"
      - "machinesets"
      - "machinesets/status"
    verbs:
      - "*"
  - apiGroups:
      - ""
    resources:
      - "nodes"
    verbs:
      - "*"
  # Pods are required for draining
  # PVs are required for vsphere to detach them prior to deleting the instance
  # Secrets and configmaps are needed for the bootstrap token creation and when a ref is used for a
  # value in the machineSpec
  - apiGroups:
      - ""
    resources:
      - "pods"
    verbs:
      - "list"
      - "get"
  - apiGroups:
      - ""
    resources:
      - "persistentvolumes"
      - "secrets"
      - "configmaps"
    verbs:
      - "list"
      - "get"
      - "watch"
  # volumeAttachments permissions are needed by vsphere clusters
  - apiGroups:
      - "storage.k8s.io"
    resources:
      - "volumeattachments"
    verbs:
      - "list"
      - "get"
      - "watch"
  - apiGroups:
      - ""
    resources:
      - "pods/eviction"
    verbs:
      - "create"
  # The following roles are required for NodeCSRApprover controller to be able
  # to reconcile CertificateSigningRequests for kubelet serving certificates.
  - apiGroups:
      - "certificates.k8s.io"
    resources:
      - "certificatesigningrequests"
    verbs:
      - "get"
      - "list"
      - "watch"
  - apiGroups:
      - "certificates.k8s.io"
    resources:
      - "certificatesigningrequests/approval"
    verbs:
      - "update"
  - apiGroups:
      - "certificates.k8s.io"
    resources:
      - "signers"
    resourceNames:
      - "kubernetes.io/kubelet-serving"
    verbs:
      - "approve"

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: machine-controller:kubelet-bootstrap
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:node-bootstrapper
subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: system:bootstrappers:machine-controller:default-node-token

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: machine-controller:node-signer
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:certificates.k8s.io:certificatesigningrequests:nodeclient
subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: system:bootstrappers:machine-controller:default-node-token

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: machine-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: machine-controller
subjects:
  - kind: ServiceAccount
    name: machine-controller
    namespace: kube-system
