apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: nutanix-csi-storage
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/management-plane: PrismCentral
    app.kubernetes.io/name: nutanix-csi-storage
    app.kubernetes.io/version: 3.3.4
    helm.sh/chart: nutanix-csi-storage-3.3.4
  name: nutanix-csi-controller
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: nutanix-csi-node
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    helm.sh/hook: pre-upgrade,pre-install
    helm.sh/hook-delete-policy: hook-succeeded,before-hook-creation,hook-failed
    helm.sh/hook-weight: "0"
  labels:
    app: nutanix-csi-storage-precheck
  name: nutanix-csi-storage-precheck-serviceaccount
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: nutanix-csi-storage
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/management-plane: PrismCentral
    app.kubernetes.io/name: nutanix-csi-storage
    app.kubernetes.io/version: 3.3.4
    helm.sh/chart: nutanix-csi-storage-3.3.4
  name: nutanix-csi-controller-role
  namespace: kube-system
rules:
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - namespaces
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - persistentvolumes
    verbs:
      - get
      - list
      - watch
      - create
      - delete
      - update
      - patch
  - apiGroups:
      - ""
    resources:
      - persistentvolumeclaims
    verbs:
      - get
      - list
      - watch
      - update
  - apiGroups:
      - ""
    resources:
      - persistentvolumeclaims/status
    verbs:
      - update
      - patch
  - apiGroups:
      - storage.k8s.io
    resources:
      - storageclasses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - storage.k8s.io
    resources:
      - volumeattachments
    verbs:
      - get
      - list
      - watch
      - update
      - patch
  - apiGroups:
      - storage.k8s.io
    resources:
      - volumeattachments/status
    verbs:
      - patch
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
  - apiGroups:
      - snapshot.storage.k8s.io
    resources:
      - volumesnapshotclasses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - snapshot.storage.k8s.io
    resources:
      - volumesnapshots
    verbs:
      - get
      - list
      - watch
      - update
  - apiGroups:
      - snapshot.storage.k8s.io
    resources:
      - volumesnapshots/status
    verbs:
      - update
  - apiGroups:
      - snapshot.storage.k8s.io
    resources:
      - volumesnapshotcontents
    verbs:
      - create
      - get
      - list
      - watch
      - update
      - delete
      - patch
  - apiGroups:
      - snapshot.storage.k8s.io
    resources:
      - volumesnapshotcontents/status
    verbs:
      - update
      - patch
  - apiGroups:
      - storage.k8s.io
    resources:
      - csinodes
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - get
      - create
      - delete
      - update
      - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: nutanix-csi-node-role
  namespace: kube-system
rules:
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - get
      - list
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - get
      - list
      - update
  - apiGroups:
      - ""
    resources:
      - namespaces
    verbs:
      - get
      - list
  - apiGroups:
      - ""
    resources:
      - persistentvolumes
    verbs:
      - get
      - list
      - watch
      - update
  - apiGroups:
      - storage.k8s.io
    resources:
      - volumeattachments
    verbs:
      - get
      - list
      - watch
      - update
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    helm.sh/hook: pre-upgrade,pre-install
    helm.sh/hook-delete-policy: hook-succeeded,before-hook-creation,hook-failed
    helm.sh/hook-weight: "0"
  labels:
    app: nutanix-csi-storage-precheck
  name: nutanix-csi-storage-precheck-role
  namespace: kube-system
rules:
  - apiGroups:
      - ""
    resources:
      - namespaces
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch
      - update
      - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: nutanix-csi-controller-binding
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: nutanix-csi-controller-role
subjects:
  - kind: ServiceAccount
    name: nutanix-csi-controller
    namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: nutanix-csi-node-binding
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: nutanix-csi-node-role
subjects:
  - kind: ServiceAccount
    name: nutanix-csi-node
    namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    helm.sh/hook: pre-upgrade,pre-install
    helm.sh/hook-delete-policy: hook-succeeded,before-hook-creation,hook-failed
    helm.sh/hook-weight: "0"
  labels:
    app: nutanix-csi-storage-precheck
  name: nutanix-csi-storage-precheck-binding
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: nutanix-csi-storage-precheck-role
subjects:
  - kind: ServiceAccount
    name: nutanix-csi-storage-precheck-serviceaccount
    namespace: kube-system
---
apiVersion: v1
data:
  associateCategoriesToVolume: "true"
  kubernetesClusterDeploymentType: non-bare-metal
  usePC: "true"
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: nutanix-csi-storage
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/management-plane: PrismCentral
    app.kubernetes.io/name: nutanix-csi-storage
    app.kubernetes.io/version: 3.3.4
    helm.sh/chart: nutanix-csi-storage-3.3.4
  name: ntnx-init-configmap
  namespace: kube-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: nutanix-csi-metrics
    app.kubernetes.io/instance: nutanix-csi-storage
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/management-plane: PrismCentral
    app.kubernetes.io/name: nutanix-csi-storage
    app.kubernetes.io/version: 3.3.4
    helm.sh/chart: nutanix-csi-storage-3.3.4
  name: nutanix-csi-metrics
  namespace: kube-system
spec:
  ports:
    - name: provisioner
      port: 9809
      protocol: TCP
      targetPort: 9809
    - name: attacher
      port: 9810
      protocol: TCP
      targetPort: 9810
    - name: resizer
      port: 9811
      protocol: TCP
      targetPort: 9811
    - name: snapshotter
      port: 9812
      protocol: TCP
      targetPort: 9812
  selector:
    app: nutanix-csi-controller
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: nutanix-csi-storage
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/management-plane: PrismCentral
    app.kubernetes.io/name: nutanix-csi-storage
    app.kubernetes.io/version: 3.3.4
    helm.sh/chart: nutanix-csi-storage-3.3.4
  name: nutanix-csi-controller
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      app: nutanix-csi-controller
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: nutanix-csi-plugin
        kubeone.k8c.io/cabundle-hash: '{{ CABundle | sha256sum }}'
        kubeone.k8c.io/credentials-hash: '{{ .CredentialsCCMHash }}'
      labels:
        app: nutanix-csi-controller
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - nutanix-csi-controller
              topologyKey: kubernetes.io/hostname
      containers:
        - args:
            - --csi-address=$(ADDRESS)
            - --timeout=300s
            - --worker-threads=16
            - --extra-create-metadata=true
            - --default-fstype=ext4
            - --http-endpoint=:9809
            - --feature-gates=Topology=true
            - --leader-election=true
            - --v=2
            - --prevent-volume-mode-conversion=true
          env:
            - name: ADDRESS
              value: /var/lib/csi/sockets/pluginproxy/csi.sock
          image: '{{ .InternalImages.Get "NutanixCSIProvisioner" }}'
          imagePullPolicy: IfNotPresent
          name: csi-provisioner
          resources:
            limits:
              cpu: 100m
              memory: 200Mi
            requests:
              cpu: 100m
              memory: 200Mi
          volumeMounts:
            - mountPath: /var/lib/csi/sockets/pluginproxy/
              name: socket-dir
        - args:
            - --csi-address=$(ADDRESS)
            - --timeout=300s
            - --worker-threads=16
            - --http-endpoint=:9810
            - --v=2
            - --leader-election=true
          env:
            - name: ADDRESS
              value: /var/lib/csi/sockets/pluginproxy/csi.sock
          image: '{{ .InternalImages.Get "NutanixCSIAttacher" }}'
          imagePullPolicy: IfNotPresent
          name: csi-attacher
          resources:
            limits:
              cpu: 100m
              memory: 200Mi
            requests:
              cpu: 100m
              memory: 200Mi
          volumeMounts:
            - mountPath: /var/lib/csi/sockets/pluginproxy/
              name: socket-dir
        - args:
            - --v=2
            - --csi-address=$(ADDRESS)
            - --timeout=300s
            - --leader-election=true
            - --handle-volume-inuse-error=false
            - --http-endpoint=:9811
          env:
            - name: ADDRESS
              value: /var/lib/csi/sockets/pluginproxy/csi.sock
          image: '{{ .InternalImages.Get "NutanixCSIResizer" }}'
          imagePullPolicy: IfNotPresent
          name: csi-resizer
          resources:
            limits:
              cpu: 100m
              memory: 200Mi
            requests:
              cpu: 100m
              memory: 200Mi
          volumeMounts:
            - mountPath: /var/lib/csi/sockets/pluginproxy/
              name: socket-dir
        - args:
            - --csi-address=$(ADDRESS)
            - --leader-election=true
            - --logtostderr=true
            - --timeout=300s
            - --http-endpoint=:9812
          env:
            - name: ADDRESS
              value: /csi/csi.sock
          image: '{{ .InternalImages.Get "NutanixCSISnapshotter" }}'
          imagePullPolicy: IfNotPresent
          name: csi-snapshotter
          resources:
            requests:
              cpu: 5m
              memory: 30Mi
          volumeMounts:
            - mountPath: /csi
              name: socket-dir
        - args:
            - --endpoint=$(CSI_ENDPOINT)
            - --nodeid=$(NODE_ID)
            - --drivername=csi.nutanix.com
            - --files-ro-volumes-clone-enabled=false
            - --force-detach-existing-client-for-sync-rep-vol=false
          env:
            - name: CSI_ENDPOINT
              value: unix:///var/lib/csi/sockets/pluginproxy/csi.sock
            - name: NODE_ID
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: CSI_CONTROLLER_POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: CSI_SECRET_DIR
              value: /var/run/ntnx-secret-dir
            - name: CSI_CATEGORY_CONFIGMAP_NAME
              value: ntnx-cluster-configmap
            - name: CSI_CATEGORY_CONFIGMAP_NAMESPACE
              value: kube-system
            - name: CSI_INIT_CONFIGMAP_NAME
              value: ntnx-init-configmap
            - name: CSI_INIT_CONFIGMAP_NAMESPACE
              value: kube-system
            - name: CSI_CATEGORYID_CONFIGMAP_NAME
              value: nutanix-csi-storage-category-id
            - name: CSI_CATEGORYID_CONFIGMAP_NAMESPACE
              value: kube-system
            - name: CSI_PLUGIN_TYPE
              value: CONTROLLER_PLUGIN
          image: '{{ .InternalImages.Get "NutanixCSI" }}'
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: http-endpoint
            initialDelaySeconds: 60
            periodSeconds: 2
            timeoutSeconds: 3
          name: nutanix-csi-plugin
          ports:
            - containerPort: 9807
              name: http-endpoint
              protocol: TCP
          resources:
            limits:
              cpu: 200m
              memory: 200Mi
            requests:
              cpu: 200m
              memory: 200Mi
          securityContext:
            allowPrivilegeEscalation: true
            privileged: true
          volumeMounts:
            - mountPath: /var/lib/csi/sockets/pluginproxy/
              name: socket-dir
            - mountPath: /host
              name: root-dir
            - mountPath: /var/run/ntnx-secret-dir
              name: pc-secret
              readOnly: true
        - args:
            - --csi-address=/csi/csi.sock
            - --http-endpoint=:9807
          image: '{{ .InternalImages.Get "NutanixCSILivenessProbe" }}'
          imagePullPolicy: IfNotPresent
          name: liveness-probe
          resources:
            requests:
              cpu: 5m
              memory: 20Mi
          volumeMounts:
            - mountPath: /csi
              name: socket-dir
        - args:
            - --v=5
            - --csi-address=$(ADDRESS)
            - --leader-election=false
            - --http-endpoint=:9813
            - --monitor-interval=1m0s
          env:
            - name: ADDRESS
              value: unix:///var/lib/csi/sockets/pluginproxy/csi.sock
          image: '{{ .InternalImages.Get "NutanixCSIExternalHealthMonitor" }}'
          imagePullPolicy: IfNotPresent
          name: csi-external-health-monitor-controller
          volumeMounts:
            - mountPath: /var/lib/csi/sockets/pluginproxy/
              name: socket-dir
      hostNetwork: true
      nodeSelector:
        node-role.kubernetes.io/control-plane: ""
      priorityClassName: system-cluster-critical
      serviceAccount: nutanix-csi-controller
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
      volumes:
        - emptyDir: {}
          name: socket-dir
        - hostPath:
            path: /
            type: Directory
          name: root-dir
        - name: pc-secret
          secret:
            secretName: ntnx-pc-secret
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app.kubernetes.io/instance: nutanix-csi-storage
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/management-plane: PrismCentral
    app.kubernetes.io/name: nutanix-csi-storage
    app.kubernetes.io/version: 3.3.4
    helm.sh/chart: nutanix-csi-storage-3.3.4
  name: nutanix-csi-node
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app: nutanix-csi-node
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: nutanix-csi-node
        kubeone.k8c.io/cabundle-hash: '{{ CABundle | sha256sum }}'
        kubeone.k8c.io/credentials-hash: '{{ .CredentialsCCMHash }}'
      labels:
        app: nutanix-csi-node
    spec:
      containers:
        - args:
            - --v=2
            - --csi-address=$(ADDRESS)
            - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
          env:
            - name: ADDRESS
              value: /csi/csi.sock
            - name: DRIVER_REG_SOCK_PATH
              value: /var/lib/kubelet/plugins/csi.nutanix.com/csi.sock
            - name: KUBE_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          image: '{{ .InternalImages.Get "NutanixCSIRegistrar" }}'
          imagePullPolicy: IfNotPresent
          name: driver-registrar
          resources:
            limits:
              cpu: 100m
              memory: 200Mi
            requests:
              cpu: 100m
              memory: 200Mi
          volumeMounts:
            - mountPath: /csi/
              name: plugin-dir
            - mountPath: /registration
              name: registration-dir
        - args:
            - --endpoint=$(CSI_ENDPOINT)
            - --nodeid=$(NODE_ID)
            - --drivername=csi.nutanix.com
            - --max-volumes-per-node=64
          env:
            - name: CSI_ENDPOINT
              value: unix:///csi/csi.sock
            - name: NODE_ID
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: NODE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: CSI_SECRET_DIR
              value: /var/run/ntnx-secret-dir
            - name: CSI_INIT_CONFIGMAP_NAME
              value: ntnx-init-configmap
            - name: CSI_INIT_CONFIGMAP_NAMESPACE
              value: kube-system
            - name: CSI_PLUGIN_TYPE
              value: NODE_PLUGIN
          image: '{{ .InternalImages.Get "NutanixCSI" }}'
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: http-endpoint
            initialDelaySeconds: 60
            periodSeconds: 2
            timeoutSeconds: 3
          name: nutanix-csi-node
          ports:
            - containerPort: 9808
              name: http-endpoint
              protocol: TCP
          resources:
            limits:
              cpu: 200m
              memory: 200Mi
            requests:
              cpu: 200m
              memory: 200Mi
          securityContext:
            allowPrivilegeEscalation: true
            privileged: true
          volumeMounts:
            - mountPath: /var/run/ntnx-secret-dir
              name: pc-secret
              readOnly: true
            - mountPath: /csi
              name: plugin-dir
            - mountPath: /var/lib/kubelet
              mountPropagation: Bidirectional
              name: pods-mount-dir
            - mountPath: /dev
              name: device-dir
            - mountPath: /etc/iscsi
              name: iscsi-dir
            - mountPath: /host
              mountPropagation: Bidirectional
              name: root-dir
        - args:
            - --csi-address=/csi/csi.sock
            - --http-endpoint=:9808
          image: '{{ .InternalImages.Get "NutanixCSILivenessProbe" }}'
          imagePullPolicy: IfNotPresent
          name: liveness-probe
          resources:
            requests:
              cpu: 5m
              memory: 20Mi
          volumeMounts:
            - mountPath: /csi
              name: plugin-dir
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      serviceAccount: nutanix-csi-node
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
      volumes:
        - hostPath:
            path: /var/lib/kubelet/plugins_registry/
            type: Directory
          name: registration-dir
        - hostPath:
            path: /var/lib/kubelet/plugins/csi.nutanix.com/
            type: DirectoryOrCreate
          name: plugin-dir
        - hostPath:
            path: /var/lib/kubelet
            type: Directory
          name: pods-mount-dir
        - hostPath:
            path: /dev
          name: device-dir
        - hostPath:
            path: /etc/iscsi
            type: Directory
          name: iscsi-dir
        - hostPath:
            path: /
            type: Directory
          name: root-dir
        - name: pc-secret
          secret:
            secretName: ntnx-pc-secret
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 10%
    type: RollingUpdate
---
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: pre-upgrade,pre-install
    helm.sh/hook-delete-policy: hook-succeeded,before-hook-creation
    helm.sh/hook-weight: "1"
  labels:
    app: nutanix-csi-storage-precheck
  name: nutanix-csi-storage-precheck-job
spec:
  backoffLimit: 0
  template:
    metadata:
      name: nutanix-csi-storage-precheck-job
    spec:
      containers:
        - env:
            - name: CSI_PC_SECRET_DIR
              value: /var/run/prechek-pc-secret-dir
            - name: CSI_CATEGORY_CONFIGMAP_NAME
              value: ntnx-cluster-configmap
            - name: CSI_CATEGORY_CONFIGMAP_NAMESPACE
              value: kube-system
            - name: CSI_CATEGORYID_CONFIGMAP_NAME
              value: nutanix-csi-storage-category-id
            - name: PRECHECK_CONFIGMAP_NAME
              value: nutanix-csi-storage-precheck-configmap
            - name: RELEASE_NAMESPACE
              value: kube-system
            - name: MIN_SUPPORTED_PC_VERSION
              value: pc.2024.2
            - name: USE_PC
              value: "true"
          image: '{{ .InternalImages.Get "NutanixCSIPrecheck" }}'
          imagePullPolicy: IfNotPresent
          name: ntnx-csi-precheck
          volumeMounts:
            - mountPath: /var/run/prechek-pc-secret-dir
              name: precheck-pc-secret
              readOnly: true
      restartPolicy: Never
      serviceAccountName: nutanix-csi-storage-precheck-serviceaccount
      volumes:
        - name: precheck-pc-secret
          secret:
            secretName: ntnx-pc-secret
