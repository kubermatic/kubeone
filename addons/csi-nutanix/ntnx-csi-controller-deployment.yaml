kind: Deployment
apiVersion: apps/v1
metadata:
  name: nutanix-csi-controller
  namespace: kube-system
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 0
  selector:
    matchLabels:
      app: nutanix-csi-controller
  template:
    metadata:
      labels:
        app: nutanix-csi-controller
      annotations:
        "kubeone.k8c.io/cabundle-hash": "{{ .Config.CABundle | sha256sum }}"
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app: nutanix-csi-controller
              topologyKey: kubernetes.io/hostname
            weight: 100
      serviceAccount: nutanix-csi-controller
      hostNetwork: true
      containers:
        - name: csi-provisioner
          image: {{ .InternalImages.Get "NutanixCSIProvisioner" }}
          imagePullPolicy: IfNotPresent
          args:
            - --csi-address=$(ADDRESS)
            - --timeout=60s
            - --worker-threads=16
            # This adds PV/PVC metadata to create volume requests
            - --extra-create-metadata=true
            - --default-fstype=ext4
            # This is used to collect CSI operation metrics
            - --http-endpoint=:9809
            - --v=2
            - --leader-election=true
          env:
            - name: ADDRESS
              value: /var/lib/csi/sockets/pluginproxy/csi.sock
          resources:
            limits:
              cpu: 100m
              memory: 200Mi
            requests:
              cpu: 100m
              memory: 200Mi
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/csi/sockets/pluginproxy/
        - name: csi-resizer
          image: {{ .InternalImages.Get "NutanixCSIResizer" }}
          imagePullPolicy: IfNotPresent
          args:
            - --v=2
            - --csi-address=$(ADDRESS)
            - --timeout=60s
            - --leader-election=true
            # NTNX CSI dirver supports online volume expansion.
            - --handle-volume-inuse-error=false
            - --http-endpoint=:9810
          env:
            - name: ADDRESS
              value: /var/lib/csi/sockets/pluginproxy/csi.sock
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/csi/sockets/pluginproxy/
        - name: csi-snapshotter
          image: {{ .InternalImages.Get "NutanixCSISnapshotter" }}
          imagePullPolicy: IfNotPresent
          args:
          - --csi-address=$(ADDRESS)
          - --leader-election=true
          - --logtostderr=true
          - --timeout=300s
          env:
          - name: ADDRESS
            value: /csi/csi.sock
          volumeMounts:
          - name: socket-dir
            mountPath: /csi
        - name: nutanix-csi-plugin
          image: {{ .InternalImages.Get "NutanixCSI" }}
          imagePullPolicy: IfNotPresent
          securityContext:
            allowPrivilegeEscalation: true
            privileged: true
          args:
            - --endpoint=$(CSI_ENDPOINT)
            - --nodeid=$(NODE_ID)
            - --drivername=csi.nutanix.com
          env:
            - name: CSI_ENDPOINT
              value: unix:///var/lib/csi/sockets/pluginproxy/csi.sock
            - name: NODE_ID
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
{{ if .Config.CABundle }}
{{ caBundleEnvVar | indent 12 }}
{{ end }}
          resources:
            limits:
              cpu: 100m
              memory: 200Mi
            requests:
              cpu: 100m
              memory: 200Mi
          volumeMounts:
            - mountPath: /var/lib/csi/sockets/pluginproxy/
              name: socket-dir
            # This is needed for static NFS volume feature.
            - mountPath: /host
              name: root-dir
{{ if .Config.CABundle }}
{{ caBundleVolumeMount | indent 12 }}
{{ end }}
          ports:
            - containerPort: 9807
              name: http-endpoint
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: http-endpoint
            initialDelaySeconds: 10
            timeoutSeconds: 3
            periodSeconds: 2
            failureThreshold: 3
        - name: liveness-probe
          volumeMounts:
            - mountPath: /csi
              name: socket-dir
          image: {{ .InternalImages.Get "NutanixCSILivenessProbe" }}
          imagePullPolicy: IfNotPresent
          args:
            - --csi-address=/csi/csi.sock
            - --http-endpoint=:9807
      priorityClassName: system-cluster-critical
      nodeSelector:
        node-role.kubernetes.io/control-plane: ""
      tolerations:
        - key: "node-role.kubernetes.io/master"
          operator: "Exists"
          effect: "NoSchedule"
        - key: "node-role.kubernetes.io/control-plane"
          operator: "Exists"
          effect: "NoSchedule"
      volumes:
        - emptyDir: {}
          name: socket-dir
        - hostPath:
            path: /
            type: Directory
          name: root-dir
{{ if .Config.CABundle }}
{{ caBundleVolume | indent 8 }}
{{ end }}
