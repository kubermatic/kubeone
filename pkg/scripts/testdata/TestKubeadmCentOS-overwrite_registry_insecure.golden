set -xeuo pipefail
export "PATH=$PATH:/sbin:/usr/local/bin:/opt/bin"

sudo swapoff -a
sudo sed -i '/.*swap.*/d' /etc/fstab
sudo setenforce 0 || true
[ -f /etc/selinux/config ] && sudo sed -i 's/SELINUX=enforcing/SELINUX=permissive/g' /etc/selinux/config
sudo systemctl disable --now firewalld || true

source /etc/kubeone/proxy-env


cat <<EOF | sudo tee /etc/modules-load.d/containerd.conf
overlay
br_netfilter
ip_tables
EOF
sudo modprobe overlay
sudo modprobe br_netfilter
sudo modprobe ip_tables
if modinfo nf_conntrack_ipv4 &> /dev/null; then
	sudo modprobe nf_conntrack_ipv4
else
	sudo modprobe nf_conntrack
fi
sudo mkdir -p /etc/sysctl.d
cat <<EOF | sudo tee /etc/sysctl.d/k8s.conf
fs.inotify.max_user_watches         = 1048576
kernel.panic                        = 10
kernel.panic_on_oops                = 1
net.bridge.bridge-nf-call-ip6tables = 1
net.bridge.bridge-nf-call-iptables  = 1
net.ipv4.ip_forward                 = 1
net.netfilter.nf_conntrack_max      = 1000000
vm.overcommit_memory                = 1
EOF
sudo sysctl --system


sudo mkdir -p /etc/systemd/journald.conf.d
cat <<EOF | sudo tee /etc/systemd/journald.conf.d/max_disk_use.conf
[Journal]
SystemMaxUse=5G
EOF
sudo systemctl force-reload systemd-journald


yum_proxy=""
yum_proxy="proxy=http://https.proxy #kubeone"

grep -v '#kubeone' /etc/yum.conf > /tmp/yum.conf || true
echo -n "${yum_proxy}" >> /tmp/yum.conf
sudo mv /tmp/yum.conf /etc/yum.conf


cat <<EOF | sudo tee /etc/yum.repos.d/kubernetes.repo
[kubernetes]
name=Kubernetes
baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
enabled=1
gpgcheck=1
repo_gpgcheck=0
gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
EOF

source /etc/os-release
if [ "$ID" == "centos" ] && [ "$VERSION_ID" == "8" ]; then
	sudo sed -i 's/mirrorlist/#mirrorlist/g' /etc/yum.repos.d/CentOS-*
	sudo sed -i 's|#baseurl=http://mirror.centos.org|baseurl=http://vault.centos.org|g' /etc/yum.repos.d/CentOS-*
fi


sudo yum install -y \
	yum-plugin-versionlock \
	device-mapper-persistent-data \
	lvm2 \
	conntrack-tools \
	ebtables \
	socat \
	iproute-tc \
	rsync



sudo yum install -y yum-utils
sudo yum-config-manager --add-repo=https://download.docker.com/linux/centos/docker-ce.repo
sudo yum-config-manager --save --setopt=docker-ce-stable.module_hotfixes=true >/dev/null

sudo yum versionlock delete docker-ce docker-ce-cli containerd.io || true

sudo yum install -y \
	docker-ce-'20.10.*' \
	docker-ce-cli-'20.10.*' \
	containerd.io-'1.6.*'
sudo yum versionlock add docker-ce docker-ce-cli containerd.io

sudo mkdir -p $(dirname /etc/docker/daemon.json)
sudo touch /etc/docker/daemon.json
sudo chmod 600 /etc/docker/daemon.json
cat <<EOF | sudo tee /etc/docker/daemon.json
{
	"exec-opts": [
		"native.cgroupdriver=systemd"
	],
	"storage-driver": "overlay2",
	"log-driver": "json-file",
	"log-opts": {
		"max-file": "5",
		"max-size": "100m"
	},
	"insecure-registries": [
		"127.0.0.1:5000"
	]
}
EOF
cat <<EOF | sudo tee /etc/crictl.yaml
runtime-endpoint: unix:///var/run/dockershim.sock
EOF

sudo systemctl daemon-reload
sudo systemctl enable containerd
sudo systemctl restart containerd
sudo systemctl enable --now docker
if systemctl status kubelet 2>&1 > /dev/null; then
	sudo systemctl restart kubelet
	sleep 10
fi





sudo yum install -y \
	kubelet-1.23.9 \
	kubeadm-1.23.9 \
	kubectl-1.23.9 \
	kubernetes-cni-1.2.0 \
	cri-tools-1.26.0
sudo yum versionlock add kubelet kubeadm kubectl kubernetes-cni cri-tools

sudo systemctl daemon-reload
sudo systemctl enable --now kubelet
sudo systemctl restart kubelet

