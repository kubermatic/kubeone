set -xeuo pipefail
export "PATH=$PATH:/sbin:/usr/local/bin:/opt/bin"

sudo swapoff -a
sudo sed -i '/.*swap.*/d' /etc/fstab
sudo systemctl disable --now ufw || true

source /etc/kubeone/proxy-env


cat <<EOF | sudo tee /etc/modules-load.d/containerd.conf
overlay
br_netfilter
ip_tables
EOF
sudo modprobe overlay
sudo modprobe br_netfilter
sudo modprobe ip_tables
if modinfo nf_conntrack_ipv4 &> /dev/null; then
	sudo modprobe nf_conntrack_ipv4
else
	sudo modprobe nf_conntrack
fi
sudo mkdir -p /etc/sysctl.d
cat <<EOF | sudo tee /etc/sysctl.d/k8s.conf
fs.inotify.max_user_watches         = 1048576
kernel.panic                        = 10
kernel.panic_on_oops                = 1
net.bridge.bridge-nf-call-ip6tables = 1
net.bridge.bridge-nf-call-iptables  = 1
net.ipv4.ip_forward                 = 1
net.netfilter.nf_conntrack_max      = 1000000
vm.overcommit_memory                = 1
EOF
sudo sysctl --system


sudo mkdir -p /etc/systemd/journald.conf.d
cat <<EOF | sudo tee /etc/systemd/journald.conf.d/max_disk_use.conf
[Journal]
SystemMaxUse=5G
EOF
sudo systemctl force-reload systemd-journald


sudo mkdir -p /etc/apt/apt.conf.d
cat <<EOF | sudo tee /etc/apt/apt.conf.d/proxy.conf
Acquire::https::Proxy "http://https.proxy";
Acquire::http::Proxy "http://http.proxy";
EOF

sudo apt-get update
sudo DEBIAN_FRONTEND=noninteractive apt-get install --option "Dpkg::Options::=--force-confold" -y --no-install-recommends \
	apt-transport-https \
	ca-certificates \
	curl \
	gnupg \
	lsb-release \
	rsync
sudo install -m 0755 -d /etc/apt/keyrings

curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.26/deb/Release.key | sudo gpg --dearmor --yes -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg

echo "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.26/deb/ /" | sudo tee /etc/apt/sources.list.d/kubernetes.list

sudo apt-get update

kube_ver="1.26.0*"
cni_ver="1.2.0*"
cri_ver="1.26.0*"





sudo apt-get update
sudo apt-get install -y apt-transport-https ca-certificates curl software-properties-common lsb-release
curl -fsSL https://download.docker.com/linux/ubuntu/gpg |
	sudo apt-key add -
sudo add-apt-repository "deb https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"


sudo apt-mark unhold containerd.io || true
sudo DEBIAN_FRONTEND=noninteractive apt-get install \
	--option "Dpkg::Options::=--force-confold" \
	--no-install-recommends \
	-y \
	containerd.io='1.6.*'
sudo apt-mark hold containerd.io


sudo mkdir -p $(dirname /etc/containerd/config.toml)
sudo touch /etc/containerd/config.toml
sudo chmod 600 /etc/containerd/config.toml
cat <<EOF | sudo tee /etc/containerd/config.toml
version = 2

[metrics]
address = "127.0.0.1:1338"

[plugins]
[plugins."io.containerd.grpc.v1.cri"]
[plugins."io.containerd.grpc.v1.cri".containerd]
[plugins."io.containerd.grpc.v1.cri".containerd.runtimes]
[plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc]
runtime_type = "io.containerd.runc.v2"
[plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc.options]
SystemdCgroup = true
[plugins."io.containerd.grpc.v1.cri".registry]
[plugins."io.containerd.grpc.v1.cri".registry.mirrors]
[plugins."io.containerd.grpc.v1.cri".registry.mirrors."docker.io"]
endpoint = ["https://registry-1.docker.io"]

EOF
cat <<EOF | sudo tee /etc/crictl.yaml
runtime-endpoint: unix:///run/containerd/containerd.sock
EOF

sudo systemctl daemon-reload
sudo systemctl enable containerd
sudo systemctl restart containerd



sudo DEBIAN_FRONTEND=noninteractive apt-get install \
	--option "Dpkg::Options::=--force-confold" \
	--no-install-recommends \
	-y \
	kubelet=${kube_ver} \
	kubeadm=${kube_ver} \
	kubectl=${kube_ver} \
	kubernetes-cni=${cni_ver} \
	cri-tools=${cri_ver}

sudo apt-mark hold kubelet kubeadm kubectl kubernetes-cni cri-tools

sudo systemctl daemon-reload
sudo systemctl enable --now kubelet
sudo systemctl restart kubelet
