set -xeuo pipefail
export "PATH=$PATH:/sbin:/usr/local/bin:/opt/bin"

sudo swapoff -a
sudo sed -i '/.*swap.*/d' /etc/fstab
sudo setenforce 0 || true
[ -f /etc/selinux/config ] && sudo sed -i 's/SELINUX=enforcing/SELINUX=permissive/g' /etc/selinux/config
sudo systemctl disable --now firewalld || true

source /etc/kubeone/proxy-env


cat <<EOF | sudo tee /etc/modules-load.d/containerd.conf
overlay
br_netfilter
ip_tables
EOF
sudo modprobe overlay
sudo modprobe br_netfilter
sudo modprobe ip_tables
if modinfo nf_conntrack_ipv4 &> /dev/null; then
	sudo modprobe nf_conntrack_ipv4
else
	sudo modprobe nf_conntrack
fi
sudo mkdir -p /etc/sysctl.d
cat <<EOF | sudo tee /etc/sysctl.d/k8s.conf
fs.inotify.max_user_watches         = 1048576
kernel.panic                        = 10
kernel.panic_on_oops                = 1
net.bridge.bridge-nf-call-ip6tables = 1
net.bridge.bridge-nf-call-iptables  = 1
net.ipv4.ip_forward                 = 1
net.netfilter.nf_conntrack_max      = 1000000
vm.overcommit_memory                = 1
EOF
sudo sysctl --system


sudo mkdir -p /etc/systemd/journald.conf.d
cat <<EOF | sudo tee /etc/systemd/journald.conf.d/max_disk_use.conf
[Journal]
SystemMaxUse=5G
EOF
sudo systemctl force-reload systemd-journald


yum_proxy=""
yum_proxy="proxy=http://https.proxy #kubeone"

grep -v '#kubeone' /etc/yum.conf > /tmp/yum.conf || true
echo -n "${yum_proxy}" >> /tmp/yum.conf
sudo mv /tmp/yum.conf /etc/yum.conf


# Rebuilding the yum cache is required upon migrating from the legacy to the community-owned
# repositories, otherwise, yum will fail to upgrade the packages because it's trying to
# use old revisions (e.g. 1.27.0-0 instead of 1.27.5-150500.1.1).
repo_migration_needed=false

if sudo grep -q "packages.cloud.google.com" /etc/yum.repos.d/kubernetes.repo; then
  repo_migration_needed=true
fi

cat <<EOF | sudo tee /etc/yum.repos.d/kubernetes.repo
[kubernetes]
name=Kubernetes
baseurl=https://pkgs.k8s.io/core:/stable:/v1.26/rpm/
enabled=1
gpgcheck=1
gpgkey=https://pkgs.k8s.io/core:/stable:/v1.26/rpm/repodata/repomd.xml.key
EOF

if [[ $repo_migration_needed == "true" ]]; then
  sudo yum clean all
  sudo yum makecache
fi


sudo yum install -y \
	yum-plugin-versionlock \
	device-mapper-persistent-data \
	lvm2 \
	conntrack-tools \
	ebtables \
	socat \
	iproute-tc \
	rsync




sudo yum versionlock delete containerd || true
sudo yum install -y containerd-'1.6.*'
sudo yum versionlock add containerd


sudo mkdir -p $(dirname /etc/containerd/config.toml)
sudo touch /etc/containerd/config.toml
sudo chmod 600 /etc/containerd/config.toml
cat <<EOF | sudo tee /etc/containerd/config.toml
version = 2

[metrics]
address = "127.0.0.1:1338"

[plugins]
[plugins."io.containerd.grpc.v1.cri"]
[plugins."io.containerd.grpc.v1.cri".containerd]
[plugins."io.containerd.grpc.v1.cri".containerd.runtimes]
[plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc]
runtime_type = "io.containerd.runc.v2"
[plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc.options]
SystemdCgroup = true
[plugins."io.containerd.grpc.v1.cri".registry]
[plugins."io.containerd.grpc.v1.cri".registry.mirrors]
[plugins."io.containerd.grpc.v1.cri".registry.mirrors."docker.io"]
endpoint = ["https://registry-1.docker.io"]

EOF
cat <<EOF | sudo tee /etc/crictl.yaml
runtime-endpoint: unix:///run/containerd/containerd.sock
EOF

sudo systemctl daemon-reload
sudo systemctl enable containerd
sudo systemctl restart containerd



sudo mkdir -p /opt/bin /etc/kubernetes/pki /etc/kubernetes/manifests

rm -rf /tmp/k8s-binaries
mkdir -p /tmp/k8s-binaries
cd /tmp/k8s-binaries



# Amazon Linux 2 repos include the cri-tools package. These AL2 repos have higher
# priority over the Kubernetes repos, so it's not possible to install cri-tools
# from the Kubenretes repos at all, even if the cri-tools version in the
# Kubernetes repos is newer. This is a problem because recent Kubernetes
# versions require cri-tools versions that are newer than the latest available
# cri-tools in the AL2 repos. We disable the priorities plugin  to allow yum
# to install cri-tools from the Kubernetes repos.
sudo yum install -y --disableplugin=priorities \
	kubelet-1.26.0 \
	kubeadm-1.26.0 \
	kubectl-1.26.0 \
	kubernetes-cni-1.2.0 \
	cri-tools-1.26.0
sudo yum versionlock add kubelet kubeadm kubectl kubernetes-cni cri-tools

sudo systemctl daemon-reload
sudo systemctl enable --now kubelet
sudo systemctl restart kubelet
